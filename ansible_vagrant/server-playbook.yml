---
- hosts: all
  become: true
  become_method: sudo

  vars:
    required_packages:
    - git
    - tcptraceroute
    - nmap
    - net-tools
    - htop
    - jq
    - python3-pip
    required_python_packages: []
    docker_users:
    - vagrant
    percona_mysql_version: '8' #'5.7'
    percona_mysql_root_password: vagrant
    mysql_grants_databases:
    - name: icinga2
      encoding: utf8
    - name: icingaweb2
      encoding: utf8
    - name: reporting
      encoding: utf8
    - name: x509
      encoding: utf8
    mysql_grants_users:
    - name: icinga2
      password: icinga2
      host: localhost
      priv: 'icinga2.*:ALL'
      state: present
    - name: icingaweb2
      password: icingaweb2
      host: localhost
      priv: 'icingaweb2.*:ALL'
      state: present
    - name: reporting
      password: reporting
      host: localhost
      priv: 'reporting.*:ALL'
      state: present
    - name: x509
      password: x509
      host: localhost
      priv: 'x509.*:ALL'
      state: present
    icingaweb2_initialize_dbauth: True
    icingaweb2_install_module_monitoring: True
    icingaweb2_install_module_reporting: True
    icingaweb2_install_module_businessprocess: True
    icingaweb2_install_module_x509: True
    icingaweb2_install_module_graphite: True
    icingaweb2_graphite_web_host: localhost
    icingaweb2_graphite_web_port: 8888
    icingaweb2_graphite_user: root
    icingaweb2_graphite_password: root
    icingaweb2_install_module_elasticsearch: True
    icingaweb2_elasticsearch_host: 192.168.56.101
    icingabeat_api_host: localhost
    icingabeat_api_port: 5665
    icingabeat_api_user: icinga
    icingabeat_api_password: icinga
    icingabeat_api_ssl_verify: "false"
    icingabeat_elasticsearch_host: 192.168.56.101
    icingabeat_elasticsearch_port: 9200
    mailhog_smtp_port: 1025
    mailhog_web_port: 8025
    mailhog_proxy_apache: True
    mailhog_proxy_domain: mail.elastic.lokal
    zulu_openjdk_version: "17"
    # https://prometheus.io/docs/prometheus/latest/getting_started/
    prometheus_config:
      global:
        scrape_interval: 15s
      external_labels:
        monitor: codelab-monitor
      scrape_configs:
      - job_name: prometheus
        scrape_interval: 5s
        static_configs:
        - targets:
          - 'localhost:9090'
          labels:
            group: prometheus
      - job_name: 'grafana_metrics'
        scrape_interval: 15s
        scrape_timeout: 5s
        static_configs:
        - targets: ['localhost:3000']
      - job_name: node_exporter
        scrape_interval: 5s
        static_configs:
        - targets:
          - 'localhost:9100'
          labels:
            group: 'prometheus'
        - targets:
          - 'client.lokal:9100'
          labels:
            group: 'nginx'
      - job_name: nginx_exporter
        scrape_interval: 5s
        static_configs:
        - targets:
          - 'client.lokal:9113'
          labels:
            group: 'nginx'
    prometheus_rules:
      groups:
      - name: cpu-node
        rules:
        - record: 'job_instance_mode:node_cpu_seconds:avg_rate5m'
          expr: 'avg by (job, instance, mode) (rate(node_cpu_seconds_total[5m]))'
    grafana_additional_configs:
    - section: null
      option: app_mode
      value: production
    - section: server
      option: http_addr
      value: 0.0.0.0
    - section: server
      option: http_port
      value: 3000

  pre_tasks:
  - name: check for file custom_vars.yml
    stat:
      path: custom_vars.yml
    register: stat_custom_vars
  - name: load custom vars, if existent
    include_vars:
      file: custom_vars.yml
    when: stat_custom_vars.stat.exists

  roles:
  - andrelohmann.root_colored_prompt
  - default_tasks
  #- andrelohmann.influxdb_oss
  #- andrelohmann.telegraf
  - andrelohmann.docker
  - docker_graphite
  - andrelohmann.elasticstack
  - andrelohmann.prometheus
  - andrelohmann.prometheus_node_exporter
  - andrelohmann.grafana_oss
  - andrelohmann.mailhog
  - mailhog_config
  - andrelohmann.percona_mysql
  - andrelohmann.mysql_grants
  - andrelohmann.icinga2
  - icinga_configs
  - andrelohmann.icingabeat

  tasks:

  - name: restart prometheus after each change
    systemd:
      name: prometheus
      state: restarted

...
