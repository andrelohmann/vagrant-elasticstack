---
- hosts: all
  become: true
  become_method: sudo

  vars:
    required_packages:
    - git
    - tcptraceroute
    - nmap
    - jq
    - python3-pip
    required_python_packages: []
    zulu_openjdk_version: "17"
    # https://prometheus.io/docs/prometheus/latest/getting_started/
    prometheus_config:
      global:
        scrape_interval: 15s
      external_labels:
        monitor: codelab-monitor
      scrape_configs:
      - job_name: prometheus
        scrape_interval: 5s
        static_configs:
        - targets:
          - 'localhost:9090'
          labels:
            group: prometheus
      - job_name: 'grafana_metrics'
        scrape_interval: 15s
        scrape_timeout: 5s
        static_configs:
        - targets: ['localhost:3000']
      - job_name: node_exporter
        scrape_interval: 5s
        static_configs:
        - targets:
          - 'localhost:9100'
          labels:
            group: 'prometheus'
        - targets:
          - 'client.lokal:9100'
          labels:
            group: 'nginx'
      - job_name: nginx_exporter
        scrape_interval: 5s
        static_configs:
        - targets:
          - 'client.lokal:9113'
          labels:
            group: 'nginx'
    prometheus_rules:
      groups:
      - name: cpu-node
        rules:
        - record: 'job_instance_mode:node_cpu_seconds:avg_rate5m'
          expr: 'avg by (job, instance, mode) (rate(node_cpu_seconds_total[5m]))'
    grafana_additional_configs:
    - section: null
      option: app_mode
      value: production
    - section: server
      option: http_addr
      value: 0.0.0.0
    - section: server
      option: http_port
      value: 3000

  pre_tasks:
  - name: check for file custom_vars.yml
    stat:
      path: custom_vars.yml
    register: stat_custom_vars
  - name: load custom vars, if existent
    include_vars:
      file: custom_vars.yml
    when: stat_custom_vars.stat.exists

  roles:
  - andrelohmann.root_colored_prompt
  - default_tasks
  - andrelohmann.elasticstack
  - andrelohmann.prometheus
  - andrelohmann.prometheus_node_exporter
  - andrelohmann.grafana_oss

  tasks:

  - name: restart prometheus after each change
    systemd:
      name: prometheus
      state: restarted

...
